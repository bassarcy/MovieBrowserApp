{"ast":null,"code":"var _jsxFileName = \"/Users/christopherarcy/Documents/Coding/Projects/ReactApps/MovieBrowserApp/movie-browser-app/src/components/MovieView.js\",\n  _s = $RefreshSig$();\nimport Hero from './Hero';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=ab166ff82684910ae3565621aea04d62&language=en`).then(response => response.json()).then(data => {\n      setMovieDetails(data);\n      setIsLoading(false);\n    });\n  }, [id]);\n  function renderMovieDetails() {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Hero, {\n        text: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n    if (movieDetails) {\n      // TODO: Deal with possible missing image\n      const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Hero, {\n          text: movieDetails.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterPath,\n                alt: \"...\",\n                className: \"img-fluid shadow rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: movieDetails.original_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movieDetails.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  return renderMovieDetails();\n};\n_s(MovieView, \"XV5Vu2nD/5RjmajabXuxoHTIsqg=\", false, function () {\n  return [useParams];\n});\n_c = MovieView;\nexport default MovieView;\nvar _c;\n$RefreshReg$(_c, \"MovieView\");","map":{"version":3,"names":["Hero","useParams","useEffect","useState","jsxDEV","_jsxDEV","MovieView","_s","id","movieDetails","setMovieDetails","isLoading","setIsLoading","fetch","then","response","json","data","renderMovieDetails","text","fileName","_jsxFileName","lineNumber","columnNumber","posterPath","poster_path","children","original_title","className","src","alt","overview","_c","$RefreshReg$"],"sources":["/Users/christopherarcy/Documents/Coding/Projects/ReactApps/MovieBrowserApp/movie-browser-app/src/components/MovieView.js"],"sourcesContent":["import Hero from './Hero'\nimport { useParams } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\nconst MovieView = () => {\n    const { id } =useParams()\n    const [movieDetails, setMovieDetails] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=ab166ff82684910ae3565621aea04d62&language=en`)\n        .then(response => response.json())\n        .then(data => {\n            setMovieDetails(data)\n            setIsLoading(false)\n        })\n    }, [id])\n\n    function renderMovieDetails() {\n        if(isLoading) {\n            return(\n                <Hero text=\"Loading...\" />\n            )\n        }\n        if(movieDetails) {\n            // TODO: Deal with possible missing image\n            const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n            return(\n                <div>\n                    <Hero text={movieDetails.original_title} />\n                    <div className=\"container my-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <img src={posterPath} alt=\"...\" className=\"img-fluid shadow rounded\" />\n                            </div>\n                            <div className=\"col-md-9\">\n                                <h2>{movieDetails.original_title}</h2>\n                                <p>{movieDetails.overview}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n  return renderMovieDetails()\n    \n}\n\nexport default MovieView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}